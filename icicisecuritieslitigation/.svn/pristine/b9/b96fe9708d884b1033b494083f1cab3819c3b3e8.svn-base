package lcmt.dao.impl;

import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.persistence.Query;
import javax.servlet.http.HttpSession;
import javax.transaction.Transactional;

import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.springframework.stereotype.Repository;

import lcmt.dao.LegalNoticeDao;
import lcmt.domain.LegalNotice;
import lcmt.domain.LegalNoticeDocuments;
import lcmt.domain.LegalNoticeStatus;
import lcmt.domain.LitigationRequest;

/*
 * Author: Harshad Padole
 * Date: 09/08/2016
 * Updated By:
 * Updated Date:
 * 
 * */

@Repository(value = "legalNoticeDao")
@Transactional
public class LegalNoticeDaoImpl implements LegalNoticeDao {

	@PersistenceContext
	private EntityManager em;

	// Method Created : Harshad Padole
	// Method Purpose : Save LegalNotice
	@Override
	public int persist(LegalNotice legalNotice) {
		try {
			em.persist(legalNotice);
			em.flush();
			return legalNotice.getLega_noti_id();
		} catch (Exception e) {
			e.printStackTrace();
		}
		return 0;
	}

	// Method Created : Harshad Padole
	// Method Purpose : Get List of LegalNotice
	@SuppressWarnings("unchecked")
	@Override
	public List<Object> getAllLegalNotice(HttpSession session) {
		try {
			int user_id = Integer.parseInt(session.getAttribute("sess_user_id").toString());
			String sql = "SELECT orga.orga_name,loca.loca_name,dept.dept_name,leg_cat.lega_noti_category_name,lega_noti.lega_noti_id, lega_noti_dated, lega_noti_recived_on, lega_noti_reply_deadline,usr.user_first_name, usr.user_last_name as fullname, lega_noti_reminder_date,lega_noti_added_by,lega_noti_status FROM mst_legal_notice lega_noti LEFT JOIN mst_organization orga ON orga.orga_id = lega_noti.lega_noti_entity_id  "
					+ " LEFT JOIN mst_location loca ON loca.loca_id = lega_noti.lega_noti_unit_id "
					+ " LEFT JOIN mst_department  dept ON dept.dept_id = lega_noti.lega_noti_function_id "
					+ " LEFT JOIN mst_user usr ON usr.user_id = lega_noti.lega_noti_assigned_to_id"
					//+ " JOIN mst_external_counsel ext ON ext.exte_coun_id = lega_noti.lega_noti_external_counsel_id "
					+ " LEFT JOIN mst_legal_notice_category leg_cat ON leg_cat.lega_noti_category_id = lega_noti.lega_noti_category_id";
			if (Integer.parseInt(session.getAttribute("sess_user_role").toString()) == 2) {
				sql += " where (lega_noti.lega_noti_assigned_to_id=" + user_id + " OR lega_noti_added_by=" + user_id
						+ " OR lega_noti.lega_noti_assigned_to_id IN(select DISTINCT user_id from mst_user where user_report_to="
						+ user_id
						+ ") OR lega_noti.lega_noti_added_by IN(select DISTINCT user_id from mst_user where user_report_to="
						+ user_id + "))";
			}
			//System.out.println("Query "+sql);
			Query query = em.createNativeQuery(sql);
			return query.getResultList();
		} catch (Exception e) {
			e.printStackTrace();
		}
		return null;
	}

	// Method Created : Harshad Padole
	// Method Purpose : Get Legal notice by id
	@Override
	public LegalNotice getLegalNoticeById(int lega_noti_id) {
		try {
			String sql = "SELECT * FROM mst_legal_notice where lega_noti_id = " + lega_noti_id;
			Query query = em.createNativeQuery(sql, LegalNotice.class);
			if (!query.getResultList().isEmpty()) {
				//System.out.println("This is list size: "+ query.getResultList().size());
				return (LegalNotice) query.getResultList().get(0);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		return null;
	}

	// Method Created : Harshad Padole
	// Method Purpose : Update Legal Notice
	@Override
	public void updateLegalNotice(LegalNotice legalNotice) {
		try {
			em.merge(legalNotice);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	// Method Created : Tejashri Zurunge
	// Method Purpose : Search legal notice
	@SuppressWarnings("unchecked")
	@Override
	public List<Object> searchLegalNotice(int lega_noti_entity_id, int lega_noti_unit_id, int lega_noti_function_id,
			String lega_noti_by_against, int lega_noti_category_id, int lega_noti_assigned_to_id,
			String lega_noti_from_date, String lega_noti_to_date, HttpSession session) {
		try {
			int user_id = Integer.parseInt(session.getAttribute("sess_user_id").toString());
			int report_to = Integer.parseInt(session.getAttribute("sess_user_report_to").toString());
			String sql = "SELECT orga.orga_name,loca.loca_name,dept.dept_name,leg_cat.lega_noti_category_name,lega_noti.lega_noti_id,lega_noti.lega_noti_dated,lega_noti.lega_noti_recived_on,lega_noti.lega_noti_reply_deadline ,usr.user_first_name , usr.user_last_name, lega_noti.lega_noti_reminder_date, lega_noti.lega_noti_added_by,lega_noti.lega_noti_status FROM mst_legal_notice lega_noti "
					+ " LEFT JOIN mst_organization orga ON orga.orga_id = lega_noti.lega_noti_entity_id "
					+ " LEFT JOIN mst_location loca ON loca.loca_id = lega_noti.lega_noti_unit_id "
					+ " LEFT JOIN mst_department  dept ON dept.dept_id = lega_noti.lega_noti_function_id "
					+ " LEFT JOIN mst_user usr ON usr.user_id = lega_noti.lega_noti_assigned_to_id"
					//+ " JOIN mst_external_counsel ext ON ext.exte_coun_id = lega_noti.lega_noti_external_counsel_id "
					+ " LEFT JOIN mst_legal_notice_category leg_cat ON leg_cat.lega_noti_category_id = lega_noti.lega_noti_category_id"
					+ " where lega_noti.lega_noti_entity_id= " + lega_noti_entity_id;
			if (lega_noti_unit_id > 0) {
				sql += " AND lega_noti_unit_id = " + lega_noti_unit_id;
			}
			if (lega_noti_function_id > 0) {
				sql += " AND lega_noti.lega_noti_function_id = " + lega_noti_function_id;
			}
			if (!lega_noti_by_against.equals("NA")) {
				sql += " AND lega_noti.lega_noti_by_against = '" + lega_noti_by_against + "'";
			}
			if (lega_noti_category_id > 0) {
				sql += " AND lega_noti.lega_noti_category_id = " + lega_noti_category_id;
			}

			if (!lega_noti_from_date.equals("") && !lega_noti_to_date.equals("")) {
				sql += " AND lega_noti.lega_noti_dated BETWEEN '" + lega_noti_from_date + "' AND '" + lega_noti_to_date
						+ "'";
			}

			if (Integer.parseInt(session.getAttribute("sess_user_role").toString()) == 2
					&& user_id != lega_noti_assigned_to_id) {

				if (lega_noti_assigned_to_id > 0) {
					sql += " AND (lega_noti.lega_noti_assigned_to_id IN(select user_id from mst_user where user_report_to="
							+ user_id + " AND user_id = " + lega_noti_assigned_to_id + " ) ";
					if (report_to == lega_noti_assigned_to_id) {
						String check_assigned = "select count(lega_noti_id) from mst_legal_notice where lega_noti_added_by ="
								+ user_id + " AND lega_noti_assigned_to_id=" + report_to;
						Query query = em.createNativeQuery(check_assigned);
						int count = query.getFirstResult();
						// System.out.println(" COunt "+count);
						if (count != 0)
							sql += "  OR lega_noti.lega_noti_assigned_to_id=" + report_to;
					}
					sql += " )";
				} else {
					sql += " AND (lega_noti.lega_noti_assigned_to_id=" + user_id + " OR lega_noti.lega_noti_added_by="
							+ user_id
							+ " OR lega_noti.lega_noti_assigned_to_id IN(select DISTINCT user_id from mst_user where user_report_to="
							+ user_id
							+ ") OR lega_noti.lega_noti_added_by IN(select DISTINCT user_id from mst_user where user_report_to="
							+ user_id + "))";
				}
			} else {
				if (lega_noti_assigned_to_id > 0) {
					sql += " AND lega_noti.lega_noti_assigned_to_id = " + lega_noti_assigned_to_id;
				}
			}

			String sql_two = "SELECT orga.orga_name,loca.loca_name,dept.dept_name,leg_cat.lega_noti_category_name,lega_noti.lega_noti_id,lega_noti.lega_noti_dated,lega_noti.lega_noti_recived_on,lega_noti.lega_noti_reply_deadline ,usr.user_first_name , usr.user_last_name, lega_noti.lega_noti_reminder_date, lega_noti.lega_noti_added_by,lega_noti.lega_noti_status FROM mst_legal_notice lega_noti LEFT JOIN mst_organization orga ON orga.orga_id = lega_noti.lega_noti_entity_id "
					+ " LEFT JOIN mst_location loca ON loca.loca_id = lega_noti.lega_noti_unit_id "
					+ " LEFT JOIN mst_department  dept ON dept.dept_id = lega_noti.lega_noti_function_id "
					+ " LEFT JOIN mst_user usr ON usr.user_id = lega_noti.lega_noti_assigned_to_id"
					//+ " JOIN mst_external_counsel ext ON ext.exte_coun_id = lega_noti.lega_noti_external_counsel_id "
					+ " LEFT JOIN mst_legal_notice_category leg_cat ON leg_cat.lega_noti_category_id = lega_noti.lega_noti_category_id"
					+ " where lega_noti.lega_noti_entity_id= " + lega_noti_entity_id;
			if (lega_noti_unit_id > 0) {
				sql_two += " AND lega_noti_unit_id = " + lega_noti_unit_id;
			}
			if (lega_noti_function_id > 0) {
				sql_two += " AND lega_noti.lega_noti_function_id = " + lega_noti_function_id;
			}
			if (!lega_noti_by_against.equals("NA")) {
				sql_two += " AND lega_noti.lega_noti_by_against = '" + lega_noti_by_against + "'";
			}
			if (lega_noti_category_id > 0) {
				sql_two += " AND lega_noti.lega_noti_category_id = " + lega_noti_category_id;
			}

			if (!lega_noti_from_date.equals("") && !lega_noti_to_date.equals("")) {
				sql_two += " AND lega_noti.lega_noti_dated BETWEEN '" + lega_noti_from_date + "' AND '"
						+ lega_noti_to_date + "'";
			}

			if (Integer.parseInt(session.getAttribute("sess_user_role").toString()) == 2
					&& user_id != lega_noti_assigned_to_id) {

				if (lega_noti_assigned_to_id > 0) {
					sql_two += " AND (lega_noti.lega_noti_assigned_to_id = " + lega_noti_assigned_to_id
							+ "  AND lega_noti.lega_noti_added_by =" + user_id + ")";

				} else {
					sql_two += " AND (lega_noti.lega_noti_assigned_to_id=" + user_id
							+ " OR lega_noti.lega_noti_added_by=" + user_id
							+ " OR lega_noti.lega_noti_assigned_to_id IN(select DISTINCT user_id from mst_user where user_report_to="
							+ user_id
							+ ") OR lega_noti.lega_noti_added_by IN(select DISTINCT user_id from mst_user where user_report_to="
							+ user_id + "))";
				}
			} else {
				if (lega_noti_assigned_to_id > 0) {
					sql_two += " AND lega_noti.lega_noti_assigned_to_id = " + lega_noti_assigned_to_id;
				}
			}

			String sql_three = "SELECT orga.orga_name,loca.loca_name,dept.dept_name,leg_cat.lega_noti_category_name,lega_noti.lega_noti_id,lega_noti.lega_noti_dated,lega_noti.lega_noti_recived_on,lega_noti.lega_noti_reply_deadline ,usr.user_first_name , usr.user_last_name, lega_noti.lega_noti_reminder_date, lega_noti.lega_noti_added_by,lega_noti.lega_noti_status FROM mst_legal_notice lega_noti LEFT JOIN mst_organization orga ON orga.orga_id = lega_noti.lega_noti_entity_id "
					+ " LEFT JOIN mst_location loca ON loca.loca_id = lega_noti.lega_noti_unit_id "
					+ " LEFT JOIN mst_department  dept ON dept.dept_id = lega_noti.lega_noti_function_id "
					+ " LEFT JOIN mst_user usr ON usr.user_id = lega_noti.lega_noti_assigned_to_id"
					//+ " JOIN mst_external_counsel ext ON ext.exte_coun_id = lega_noti.lega_noti_external_counsel_id "
					+ " LEFT JOIN mst_legal_notice_category leg_cat ON leg_cat.lega_noti_category_id = lega_noti.lega_noti_category_id"
					+ " where lega_noti.lega_noti_entity_id= " + lega_noti_entity_id;
			if (lega_noti_unit_id > 0) {
				sql_three += " AND lega_noti_unit_id = " + lega_noti_unit_id;
			}
			if (lega_noti_function_id > 0) {
				sql_three += " AND lega_noti.lega_noti_function_id = " + lega_noti_function_id;
			}
			if (!lega_noti_by_against.equals("NA")) {
				sql_three += " AND lega_noti.lega_noti_by_against = '" + lega_noti_by_against + "'";
			}
			if (lega_noti_category_id > 0) {
				sql_three += " AND lega_noti.lega_noti_category_id = " + lega_noti_category_id;
			}

			if (!lega_noti_from_date.equals("") && !lega_noti_to_date.equals("")) {
				sql_three += " AND lega_noti.lega_noti_dated BETWEEN '" + lega_noti_from_date + "' AND '"
						+ lega_noti_to_date + "'";
			}

			if (Integer.parseInt(session.getAttribute("sess_user_role").toString()) == 2
					&& user_id != lega_noti_assigned_to_id) {

				if (lega_noti_assigned_to_id > 0) {
					sql_three += " AND (lega_noti.lega_noti_assigned_to_id = " + lega_noti_assigned_to_id
							+ "  AND lega_noti.lega_noti_added_by IN(select DISTINCT user_id from mst_user where user_report_to="
							+ user_id + "))";

				} else {
					sql_three += " AND (lega_noti.lega_noti_assigned_to_id=" + user_id
							+ " OR lega_noti.lega_noti_added_by=" + user_id
							+ " OR lega_noti.lega_noti_assigned_to_id IN(select DISTINCT user_id from mst_user where user_report_to="
							+ user_id
							+ ") OR lega_noti.lega_noti_added_by IN(select DISTINCT user_id from mst_user where user_report_to="
							+ user_id + "))";
				}
			} else {
				if (lega_noti_assigned_to_id > 0) {
					sql_three += " AND lega_noti.lega_noti_assigned_to_id = " + lega_noti_assigned_to_id;
				}
			}
			// System.out.println("search "+sql);
			Query query = em.createNativeQuery(sql + " UNION " + sql_two + " UNION " + sql_three);

			return query.getResultList();

		} catch (Exception e) {
			e.printStackTrace();
		}
		return null;
	}

	// Method Created : Harshad Padole
	// Method Purpose : get last generated Document Id
	@Override
	public int getLastGenerateValueForLegalNotice(int lega_noti_id, int related_to) {
		try {
			String sql = "SELECT MAX(lega_doc_last_generated_value_for_notice_id) FROM trn_legal_notice_documents where lega_notice_id=? AND lega_doc_related_to = ?";
			Query query = em.createNativeQuery(sql);
			query.setParameter(1, lega_noti_id);
			query.setParameter(2, related_to);
			if (query.getResultList().get(0) != null) {
				return Integer.parseInt(query.getResultList().get(0).toString());
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		return 0;
	}

	// Method Created : Harshad Padole
	// Method Purpose : save Legal document details in database
	@Override
	public void saveLegalDocuments(LegalNoticeDocuments documents) {
		try {
			em.persist(documents);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	// Method Created : Tejashri Zurunge
	// Method Purpose : get details of legal notice
	@Override
	public Object[] getJoinedDetailsLegalNotice(int lega_noti_id) {
		try {
			String sql = "SELECT orga.orga_name,loca.loca_name,dept.dept_name,leg_cat.lega_noti_category_name,lega_noti.lega_noti_id,lega_noti.lega_noti_dated,lega_noti.lega_noti_recived_on,lega_noti.lega_noti_reply_deadline,usr.user_first_name , usr.user_last_name as assignedTo,lega_noti.lega_noti_reminder_date, lega_noti.lega_noti_by_against, lega_noti.lega_noti_opposite_party, lega_noti.lega_noti_amount_involved, lega_noti.lega_noti_reference_no, lega_noti.lega_noti_addressed_to, lega_noti_external_counsel_id, lega_noti.lega_noti_opposite_party_advocate, lega_noti.lega_noti_relevant_law, lega_noti.lega_noti_comments,lega_noti.lega_noti_intern_cont_person,lega_noti.lega_noti_involved_amt_currency,lega_noti.lega_noti_status,lega_noti.lega_noti_liti_ref_id FROM mst_legal_notice lega_noti LEFT JOIN mst_organization orga ON orga.orga_id = lega_noti.lega_noti_entity_id "
					+ " LEFT JOIN mst_location loca ON loca.loca_id = lega_noti.lega_noti_unit_id "
					+ " LEFT JOIN mst_department  dept ON dept.dept_id = lega_noti.lega_noti_function_id "
					+ " LEFT JOIN mst_user usr ON usr.user_id = lega_noti.lega_noti_assigned_to_id"
					//+ " JOIN mst_external_counsel ext ON ext.exte_coun_id = lega_noti.lega_noti_external_counsel_id "
					+ " LEFT JOIN mst_legal_notice_category leg_cat ON leg_cat.lega_noti_category_id = lega_noti.lega_noti_category_id"
					+ " where lega_noti.lega_noti_id= " + lega_noti_id;
			Query query = em.createNativeQuery(sql);
			return (Object[]) query.getResultList().get(0);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return null;
	}

	// Method Created : Tejashri Zurunge
	// Method Purpose : get list of legal notice doc
	@SuppressWarnings("unchecked")
	@Override
	public List<LegalNoticeDocuments> getAllLegalNoticeDocById(int lega_noti_id, int related_to) {
		try {
			String sql = "SELECT * FROM trn_legal_notice_documents where lega_notice_id = ? AND lega_doc_related_to = ?";
			Query query = em.createNativeQuery(sql, LegalNoticeDocuments.class);
			query.setParameter(1, lega_noti_id);
			query.setParameter(2, related_to);
			if (!query.getResultList().isEmpty()) {
				return query.getResultList();
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		return null;
	}

	// Method Created : Tejashri Zurunge
	// Method Purpose : get legal notice document by doc id
	@Override
	public String getLegalNoticeDocFilePath(int lega_doc_id) {
		try {
			String sql = "select lega_doc_generated_file_name from trn_legal_notice_documents where lega_doc_id = "
					+ lega_doc_id;
			Query query = em.createNativeQuery(sql);
			if (!query.getResultList().isEmpty()) {
				if (query.getResultList().get(0) != null) {
					return query.getResultList().get(0).toString();
				}
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
		return null;
	}

	// Method Created : Harshad Padole
	// Method Purpose : Save status details
	@Override
	public int saveLegalNoticeStatus(LegalNoticeStatus legalNoticeStatus) {
		try {
			em.persist(legalNoticeStatus);
			em.flush();
			return legalNoticeStatus.getLega_status_id();
		} catch (Exception e) {
			e.printStackTrace();
		}
		return 0;
	}

	// Method Created : Harshad Padole
	// Method Purpose : get status details by legal notice id
	@SuppressWarnings("unchecked")
	@Override
	public <T> List<T> getAllLegalStatus(int lega_noti_id) {
		try {
			String sql = "select lega_status_id,lega_notice_id,lega_action_taken,lega_next_action_item,lega_action_item_due_date,lega_reminder_date,lega_person_responsible,lega_status_added_by,lega_notice_status, lega_person_responsible_others, lega_received_date from trn_legal_notice_status "
					+ " where lega_notice_id= "
					+ lega_noti_id + " ORDER BY lega_status_id DESC";
			Query query = em.createNativeQuery(sql);
			return query.getResultList();
		} catch (Exception e) {
			e.printStackTrace();
		}
		return null;
	}

	@Override
	public LegalNoticeStatus getLegalStatusById(int lega_noti_id) {
		try {
			String sql = "select * from trn_legal_notice_status where lega_status_id =?";
			Query query = em.createNativeQuery(sql, LegalNoticeStatus.class);
			query.setParameter(1, lega_noti_id);
			return (LegalNoticeStatus) query.getResultList().get(0);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return null;
	}

	@Override
	public void merge(Object object) {
		try {
			em.merge(object);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	// Method Created : Tejashri Zurunge
	// Method Purpose : save legal notice logs
	@Override
	public int saveLogs(Object obj) {
		try {
			em.persist(obj);
			em.flush();
		} catch (Exception e) {
			e.printStackTrace();
		}
		return 0;
	}

	// Method Created : Tejashri Zurunge
	// Method Purpose : get legal notice logs
	@SuppressWarnings("unchecked")
	@Override
	public <T> List<T> getLegalNoticeStatusLogs(String json) {
		try {
			JSONObject jsonObject = (JSONObject) new JSONParser().parse(json);
			int log_status_id = Integer.parseInt(jsonObject.get("lega_noti_status_id").toString());

			String sql = "Select lega_status_id,lega_notice_id,lega_action_taken,lega_next_action_item,lega_action_item_due_date,lega_reminder_date,lega_person_responsible,lega_status_added_by,user_first_name,user_last_name, lega_log_status from trn_legal_notice_status_logs "
					+ " JOIN mst_user ON user_id=lega_person_responsible where lega_status_id=" + log_status_id;
			Query query = em.createNativeQuery(sql);
			return query.getResultList();

		} catch (Exception e) {
			e.printStackTrace();
		}
		return null;
	}

	// Method Created : Tejashri Zurunge
	// Method Purpose : delete legal notice
	@Override
	public int deleteLegalNotice(int lega_noti_id) {
		try {
			String sql_one = "Delete from mst_legal_notice where lega_noti_id =" + lega_noti_id;
			String sql_two = "Delete from trn_legal_notice_documents where lega_notice_id =" + lega_noti_id
							+ " AND lega_doc_related_to =1";
			String sql_three = "Delete from trn_legal_notice_status where lega_notice_id =" + lega_noti_id;
			String sql_four = "Delete from trn_legal_notice_documents where lega_notice_id IN(select lega_status_id from trn_legal_notice_status where lega_notice_id ="
					+ lega_noti_id + ") AND lega_doc_related_to =2";
			Query query1 = em.createNativeQuery(sql_one);
			Query query2 = em.createNativeQuery(sql_two);
			Query query3 = em.createNativeQuery(sql_four);
			Query query4 = em.createNativeQuery(sql_three);
			query1.executeUpdate();
			query2.executeUpdate();
			query3.executeUpdate();
			query4.executeUpdate();
			return 1;
		} catch (Exception e) {
			e.printStackTrace();
		}
		return 0;
	}

	// Method Created : Tejashri Zurunge
	// Method Purpose : delete legal notice Status
	@Override
	public int deleteLegalNoticeStatus(int lega_status_id) {
		try {
			String sql_one = "Delete from trn_legal_notice_documents where lega_notice_id =" + lega_status_id
					+ " AND lega_doc_related_to =2";
			String sql = "Delete from trn_legal_notice_status where lega_status_id =" + lega_status_id;
			Query query_one = em.createNativeQuery(sql_one);
			Query query = em.createNativeQuery(sql);
			query_one.executeUpdate();
			query.executeUpdate();
			return 1;
		} catch (Exception e) {
			e.printStackTrace();
		}
		return 0;
	}

	// Method Created : Tejashri Zurunge
	// Method Purpose : delete legal notice Status
	@Override
	public int deleteLegaNotiStatusDoc(int doc_id) {
		try {
			String sql = "Delete from trn_legal_notice_documents where lega_doc_id =" + doc_id;
			Query query = em.createNativeQuery(sql);
			query.executeUpdate();
			return 1;
		} catch (Exception e) {
			e.printStackTrace();
		}
		return 0;
	}

	@Override
	public String getLatestActionTaken(int noti_id) {
		try {
			String sql = "SELECT lega_action_taken FROM trn_legal_notice_status where lega_notice_id ="
					+ noti_id + " ORDER BY lega_status_id DESC LIMIT 1";
			Query query = em.createNativeQuery(sql);
			if (query.getResultList().size() > 0 && query.getResultList().get(0) != null) {
				return query.getResultList().get(0).toString();
			} else {
				return "NA";
			}			
		} catch (Exception e) {
			e.printStackTrace();
		}
		return null;
	}

	// Method Created : Tejashri Zurunge
	// Method purpose : get user by legal notice entity, unit and function id
	@SuppressWarnings("unchecked")
	@Override
	public <T> List<T> getUserByLegalNoticeId(int orga_id, int loca_id, int dept_id) {
		try {
			String sql = "Select distinct lega_noti_assigned_to_id, user_first_name, user_last_name from mst_legal_notice "
					+ " JOIN mst_user ON user_id = lega_noti_assigned_to_id "
					+ " where lega_noti_entity_id= " + orga_id;
			if (loca_id > 0) {
				sql += " AND lega_noti_unit_id = " + loca_id;
			}
			if (dept_id > 0) {
				sql += " AND lega_noti_function_id = " + dept_id;
			}
			Query query = em.createNativeQuery(sql);
			return query.getResultList();
		} catch (Exception e) {
			e.printStackTrace();
		}
		return null;
	}

	@Override
	public void update(Object obj) {
		try {
			em.merge(obj);
		} catch (Exception e) {
			e.printStackTrace();
		}
		
	}
	// Method Created :Pranjali Kawale
		// Method purpose : get all list of legal notice
	@Override
	public LegalNotice getAllListlegalNotice(int lega_noti_id, HttpSession session) {
		// TODO Auto-generated method stub
		try {
			String sql = " Select * FROM `mst_legal_notice` where lega_noti_id = "+lega_noti_id;
			Query query = em.createNativeQuery(sql, LegalNotice.class);
			if(query.getResultList() != null)
			return (LegalNotice) query.getResultList().get(0);
		} catch (Exception e) {
			e.printStackTrace();
		}
		return null;
	}
}
